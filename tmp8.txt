Keyword int in line 3
Header file completed
main main in line 3
Opening brackets ( in line 3
Closing brackets ) in line 3
Opening braces { in line 4
Keyword int in line 5
Identifier a in line 5
Inside new symbol table for global
Assignment operator = in line 5
Number 5 in line 5
SEMI ; in line 5
Keyword int in line 6
Identifier b in line 6
Inside new symbol table for global
Assignment operator = in line 6
Identifier a in line 6
Identifier a found with scope 0
Current scope count 0
Error * in line 6
Number 2 in line 6
SEMI ; in line 6
Keyword int in line 7
Identifier c in line 7
Inside new symbol table for global
Assignment operator = in line 7
Identifier a in line 7
Identifier a found with scope 0
Current scope count 0
Error * in line 7
Identifier b in line 7
Identifier b found with scope 0
Current scope count 0
SEMI ; in line 7
if if in line 8
Opening brackets ( in line 8
Identifier a in line 8
Identifier a found with scope 0
Current scope count 0
Relational Operator == in line 8
Number 1 in line 8
Closing brackets ) in line 8
Relational exp called
var: a
relop: ==
reg name: 1
Opening braces { in line 9
Identifier a in line 10
Identifier a found with scope 0
Current scope count 1
Inside new symbol table for local
Assignment operator = in line 10
Number 1 in line 10
SEMI ; in line 10
Inside Assignment
Closing braces } in line 11
else else in line 12
Opening braces { in line 13
Identifier b in line 14
Identifier b found with scope 0
Current scope count 1
Inside new symbol table for local
Assignment operator = in line 14
Number 1 in line 14
SEMI ; in line 14
Inside Assignment
Closing braces } in line 15
Closing braces } in line 16

Preorder Traversal 
PROGRAM int STATEMENT = Type int a 5 STATEMENT = Type int b * a 2 STATEMENT = Type int c * a b IF-ELSE if == a 1 = a 1 = b 1 
Inorder Traversal 
int PROGRAM int Type a = 5 STATEMENT int Type b = a * 2 STATEMENT int Type c = a * b STATEMENT a == 1 if a = 1 IF-ELSE b = 1 
Postorder Traversal 
int int a Type 5 = int b Type a 2 * = int c Type a b * = a 1 == a 1 = if b 1 = IF-ELSE STATEMENT STATEMENT STATEMENT PROGRAM 
Result of parse: 0
				 Symbol Table 				

	Varibale Name	|	Value	|	Type	|	Scope	
	-----------------------------------------------------------------------
		a	|	5	|	int	|	GLOBAL	
		b	|	10	|	int	|	GLOBAL	
		c	|	50	|	int	|	GLOBAL	
		a	|	1	|	int	|	LOCAL	
		b	|	1	|	int	|	LOCAL	

				 Quadruples 				

	pos	|	op	|	arg1	|	arg2	|	result	
	------------------------------------------------------------------------
	0	|	=	|	5	|		|	a	
	1	|	*	|	a	|	2	|	r0	
	2	|	=	|	10	|		|	b	
	3	|	*	|	a	|	b	|	r1	
	4	|	=	|	50	|		|	c	
	5	|	==	|	a	|	1	|		
	6	|	=	|	1	|		|	a	
	7	|	=	|	1	|		|	b	



main:
a = 5
r0 = a * 2
b = 10
r1 = a * b
c = 50
if(!(a==1)) goto L1
a = 1
goto L2
L1:
b = 1


				 Quadruples 				

	pos	|	op	|	arg1	|	arg2	|	result	
	------------------------------------------------------------------------
	0	|	L	|		|		|	main	
	1	|		|	5	|		|	a	
	2	|		|	5*2	|		|	r0	
	3	|		|	10	|		|	b	
	4	|		|	5*10	|		|	r1	
	5	|		|	50	|		|	c	
	6	|	if	|	a==1	|		|	L1	
	7	|		|	1	|		|	a	
	8	|	goto	|		|		|	L2	
	9	|	L	|		|		|	L1	
	10	|		|	1	|		|	b	



				 Optimized Code 				
main:
a = 5  
b = 10  
c = 50  
if(!(a==1)) goto L1
a = 1  
goto L2
L1:
b = 1  




Eliminated intermediate variables
r0 = 5*2
r1 = 5*10
